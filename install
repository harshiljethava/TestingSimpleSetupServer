#!/bin/bash

# Simple Setup Server  installtion/Update script.

# Define echo function
# Green color
function sss_lib_echo()
{
    echo $(tput setaf 2)$@$(tput sgr0)
}
# White color
function sss_lib_echo_info()
{
    echo $(tput setaf 7)$@$(tput sgr0)
}
# Red color
function sss_lib_echo_fail()
{
    echo $(tput setaf 1)$@$(tput sgr0)
}

# Capture errors
function sss_lib_error()
{
    echo "[ `date` ] $(tput setaf 1)$@$(tput sgr0)"
    exit $2
}

# Checking permissions
if [[ $EUID -ne 0 ]]; then
    sss_lib_echo_fail "Sudo privilege required..."
    exit 100
fi

# Execute: apt-get update
sss_lib_echo "Executing apt-get update, please wait..."
apt-get update &>> /dev/null

# Checking lsb_release package
if [ ! -x /usr/bin/lsb_release ]; then
    sss_lib_echo "Installing lsb-release, please wait..."
    apt-get -y install lsb-release &>> /dev/null
fi

# Define variables for later use
sss_branch=$1
readonly sss_version="1.0.0"
readonly sss_log_dir=/var/log/sss/
readonly sss_install_log=/var/log/sss/install.log
readonly sss_linux_distro=$(lsb_release -i | awk '{print $3}')
readonly sss_distro_version=$(lsb_release -sc)



# Checking linux distro
if [ "$sss_linux_distro" != "Ubuntu" ] ; then
    sss_lib_echo_fail "Simple Setup Server (sss) is made for Ubuntu only as of now"
    sss_lib_echo_fail "Simple Setup Server (sss) only support Ubuntu 12.04/14.04"
    exit 100
fi

# Simple Setup Server (sss) only support all Ubuntu distro except the distro reached EOL
lsb_release -d | egrep -e "12.04|14.04" &>> /dev/null
if [ "$?" -ne "0" ]; then
    sss_lib_echo_fail "Simple Setup Server (sss) only support Ubuntu 12.04/14.04"
    exit 100
fi

# Pre checks to avoid later screw ups
# Checking Simple Setup Server (sss) log directory
if [ ! -d $sss_log_dir ]; then

    sss_lib_echo "Creating Simple Setup Server log directory, please wait..."
    mkdir -p $sss_log_dir || sss_lib_error "Unable to create log directory $sss_log_dir, exit status " $?

    # Create Simple Setup Server log files
    touch /var/log/sss/{sss.log,install.log}

    # Keep Simple Setup Server log folder accessible to root only
    chmod -R 700 /var/log/sss || sss_lib_error "Unable to change permissions for Setup Server Simple log folder, exit status " $?
fi

# Install Python3, Git, Tar and python-software-properties required packages
# Generate Locale
function sss_install_dep()
{
    sss_lib_echo "Installing required packages, please wait..."
    if [ "$sss_linux_distro" == "Ubuntu" ]; then
        apt-get -y install gcc curl gzip python3 python3-apt python3-setuptools python3-dev sqlite3 git tar python-software-properties software-properties-common || sss_lib_error "Unable to install pre depedencies, exit status " 1
    fi

    # Generating Locale
    locale-gen en &>> /dev/null
}

# Sqlite query to create table `sites` into sss.db
# which will be used by Simple Setup Server

function sss_sync_db()
{
    if [ ! -f /var/lib/sss/sss.db ]; then
        mkdir -p /var/lib/sss

        echo "CREATE TABLE sites (
           id INTEGER PRIMARY KEY     AUTOINCREMENT,
           sitename UNIQUE,
           site_type CHAR,
           cache_type CHAR,
           site_path  CHAR,
           created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
           is_enabled INT,
           is_ssl INT,
           storage_fs CHAR,
           storage_db CHAR,
           db_name VARCHAR,
           db_user VARCHAR,
           db_password VARCHAR,
           db_host VARCHAR,
           is_hhvm INT INT DEFAULT '0',
           is_pagespeed INT INT DEFAULT '0'
        );" | sqlite3 /var/lib/sss/sss.db
    fi
}

function secure_sss_db()
{
    chown -R root:root /var/lib/sss/
    chmod -R 600 /var/lib/sss/
}


# Install Simple Setup Server 
function sss_install()
{
    # Remove old clone of Simple Setup Server (sss) if any
    rm -rf /tmp/setupserver &>> /dev/null

    # Clone SS 1.0 Python sss_branch
    sss_lib_echo "Cloning Simple Setup Server , please wait..."
    if [ "$sss_branch" = "" ]; then
        sss_branch=master
    fi

    git clone -b $sss_branch https://github.com/serversetup/SetupServer.git /tmp/setupserver --quiet > /dev/null \
    || sss_lib_error "Unable to clone Simple Setup Server , exit status" $?

    cd /tmp/setupserver
    sss_lib_echo "Installing Simple Setup Server , please wait..."
    python3 setup.py install || sss_lib_error "Unable to install Simple Setup Server , exit status " $?
}


# Update Simple Setup Server configuration
# Remove Old Simple Setup Server  
# Function for Future release 

function sss_update()
{
    sss_lib_echo "for update"
}


# Do git intialisation
function sss_git_init()
{
    # Apache under git version control
    if [ -d /etc/apache2 ];then
        cd /etc/apache2
        if [ ! -d /etc/apache2/.git ]; then
            git init &>> /dev/null
        fi
        git add -A .
        git commit -am "Updated Apache2" > /dev/null
    fi
    
    # Simple Setup Server under git version control

    if [ -d /etc/sss ];then
    cd /etc/sss
        if [ ! -d /etc/sss/.git ]; then
            git init > /dev/null
        fi
    git add -A .
    git commit -am "Installed/Updated to Simple Setup Server 1.0.x" &>> /dev/null
    fi

}

# Install Simple Setup Server 

sss_install_dep | tee -ai $sss_install_log
# sss_update_latest | tee -ai $sss_install_log
sss_sync_db 2&>>1 $sss_INSTALL_LOG
secure_sss_db | tee -ai $sss_INSTALL_LOG
sss_install | tee -ai $sss_INSTALL_LOG
sss_git_init | tee -ai $sss_install_log


echo
sss_lib_echo "Simple Setup Server (sss) installed/updated successfully"